(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{71:function(e,t,i){"use strict";i.r(t);var r=i(0),a=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"记一次git分支衍合导致的问题和解决方法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#记一次git分支衍合导致的问题和解决方法","aria-hidden":"true"}},[e._v("#")]),e._v(" 记一次Git分支衍合导致的问题和解决方法")]),i("h2",{attrs:{id:"事件还原"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#事件还原","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件还原")]),i("p",[e._v("公司项目需要开发2.0版本，在原来仓库的基础上，checkout出来一个新分支，记为"),i("code",[e._v("origin/v2")]),e._v("，大家都从"),i("code",[e._v("v2")]),e._v("分支checkout出feature分支进行开发。")]),i("p",[e._v("部分同事完成自己的feature分支之后，提交了几个commit，为了方便记为"),i("code",[e._v("commit-1, commit-2, commit-3")]),e._v("，并merge到了"),i("code",[e._v("origin/v2")]),e._v("分支。")]),i("p",[e._v("而我checkout出的feature分支，叫"),i("code",[e._v("feature-xxx")]),e._v("。开发完了之后，进行commit，记为"),i("code",[e._v("commit-4")]),e._v("操作。此时，我的commit history是没有commit1-3的纪录的，所以进行rebase操作。")]),i("ul",[i("li",[i("code",[e._v("git fetch origin v2")])]),i("li",[i("code",[e._v("git rebase origin v2")])]),i("li",[i("code",[e._v("git push origin feature-xxx")])])]),i("p",[e._v("发现changed files比我正常改的多很多，但是并没有冲突，于是使用了终极奥义"),i("code",[e._v("git push -f origin feature-xxx")]),e._v("。最后结果是changed files和我修改的一致，于是merge到"),i("code",[e._v("origin/v2")]),e._v("，以为没问题了。（太天真了...)")]),i("p",[e._v("后来，同事在fetch和rebase之后，发现和我一样的changed files数量不一致的问题。查看git log发现，commit tree上有很多重复的commit信息，而且commit1-3不见了。")]),i("h2",{attrs:{id:"问题原因"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#问题原因","aria-hidden":"true"}},[e._v("#")]),e._v(" 问题原因")]),i("p",[e._v("查了git的文档，发现了一个问题。"),i("code",[e._v("git rebase")]),e._v("远程的分支正确写法应该是"),i("code",[e._v("git rebase origin/branchName")]),e._v("，而省略的话则是rebase默认的分支。在这个例子中，"),i("code",[e._v("git rebase origin v2")]),e._v(" = "),i("code",[e._v("git rebase origin/master")]),e._v("。等于说commit history被强行拉回master分支了。所以在master之后的commit信息才会消失。而"),i("code",[e._v("git push -f")]),e._v("命令强行修改了commit history，所以我的commit-4还在。")]),i("h2",{attrs:{id:"解决方法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#解决方法","aria-hidden":"true"}},[e._v("#")]),e._v(" 解决方法")]),i("p",[e._v("如果能迅速发现问题，其实还是比较好解决的。")]),i("ul",[i("li",[e._v("把我的修改内容本地保存")]),i("li",[e._v("查找到出问题前的最后merge到"),i("code",[e._v("origin/v2")]),e._v("的commit hash值")]),i("li",[i("code",[e._v("git reset hash")])]),i("li",[e._v("本地保存的文件进行修改")]),i("li",[e._v("正确进行fetch/rebase")])]),i("h2",{attrs:{id:"如何避免"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#如何避免","aria-hidden":"true"}},[e._v("#")]),e._v(" 如何避免")]),i("ul",[i("li",[e._v("正确的git操作")]),i("li",[e._v("应该尽量避免使用"),i("code",[e._v("git push -f")])])]),i("p",[e._v("git作为大部分团队使用的团队工具，使用的时候一定要小心谨慎！")]),i("p",[e._v("努力学习正确的git操作ing！")])])}],!1,null,null,null);t.default=a.exports}}]);